# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: state.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from . import history_pb2 as history__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0bstate.proto\x12\x05rlenv\x1a\rhistory.proto\"\xb0\x01\n\x0cLegalActions\x12\r\n\x05move1\x18\x01 \x01(\x08\x12\r\n\x05move2\x18\x02 \x01(\x08\x12\r\n\x05move3\x18\x03 \x01(\x08\x12\r\n\x05move4\x18\x04 \x01(\x08\x12\x0f\n\x07switch1\x18\x05 \x01(\x08\x12\x0f\n\x07switch2\x18\x06 \x01(\x08\x12\x0f\n\x07switch3\x18\x07 \x01(\x08\x12\x0f\n\x07switch4\x18\x08 \x01(\x08\x12\x0f\n\x07switch5\x18\t \x01(\x08\x12\x0f\n\x07switch6\x18\n \x01(\x08\"y\n\x04Info\x12\x0e\n\x06gameId\x18\x01 \x01(\x05\x12\x0c\n\x04\x64one\x18\x02 \x01(\x08\x12\x17\n\x0fplayerOneReward\x18\x03 \x01(\x02\x12\x17\n\x0fplayerTwoReward\x18\x04 \x01(\x02\x12\x13\n\x0bplayerIndex\x18\x05 \x01(\x08\x12\x0c\n\x04turn\x18\x06 \x01(\x05\"t\n\x05State\x12\x19\n\x04info\x18\x01 \x01(\x0b\x32\x0b.rlenv.Info\x12)\n\x0clegalActions\x18\x02 \x01(\x0b\x32\x13.rlenv.LegalActions\x12%\n\x07history\x18\x03 \x03(\x0b\x32\x14.history.HistoryStepb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'state_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_LEGALACTIONS']._serialized_start=38
  _globals['_LEGALACTIONS']._serialized_end=214
  _globals['_INFO']._serialized_start=216
  _globals['_INFO']._serialized_end=337
  _globals['_STATE']._serialized_start=339
  _globals['_STATE']._serialized_end=455
# @@protoc_insertion_point(module_scope)
