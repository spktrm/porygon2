// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from "flatbuffers";
/**
 * @constructor
 */
export namespace features {
    export class Pokemon {
        bb: flatbuffers.ByteBuffer | null = null;

        bb_pos: number = 0;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns Pokemon
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): Pokemon {
            this.bb_pos = i;
            this.bb = bb;
            return this;
        }

        /**
         * @returns number
         */
        species(): number {
            return this.bb!.readUint16(this.bb_pos);
        }

        /**
         * @returns number
         */
        item(): number {
            return this.bb!.readUint16(this.bb_pos + 2);
        }

        /**
         * @returns number
         */
        itemEffect(): number {
            return this.bb!.readUint8(this.bb_pos + 4);
        }

        /**
         * @returns number
         */
        ability(): number {
            return this.bb!.readUint16(this.bb_pos + 6);
        }

        /**
         * @returns number
         */
        gender(): number {
            return this.bb!.readUint8(this.bb_pos + 8);
        }

        /**
         * @returns boolean
         */
        active(): boolean {
            return !!this.bb!.readInt8(this.bb_pos + 9);
        }

        /**
         * @returns boolean
         */
        fainted(): boolean {
            return !!this.bb!.readInt8(this.bb_pos + 10);
        }

        /**
         * @returns number
         */
        hp(): number {
            return this.bb!.readUint8(this.bb_pos + 11);
        }

        /**
         * @returns number
         */
        maxhp(): number {
            return this.bb!.readUint8(this.bb_pos + 12);
        }

        /**
         * @returns number
         */
        hpRatio(): number {
            return this.bb!.readUint16(this.bb_pos + 14);
        }

        /**
         * @returns number
         */
        status(): number {
            return this.bb!.readUint8(this.bb_pos + 16);
        }

        /**
         * @returns boolean
         */
        hasStatus(): boolean {
            return !!this.bb!.readInt8(this.bb_pos + 17);
        }

        /**
         * @returns number
         */
        toxicTurns(): number {
            return this.bb!.readUint8(this.bb_pos + 18);
        }

        /**
         * @returns number
         */
        sleepTurns(): number {
            return this.bb!.readUint8(this.bb_pos + 19);
        }

        /**
         * @returns boolean
         */
        trapped(): boolean {
            return !!this.bb!.readInt8(this.bb_pos + 20);
        }

        /**
         * @returns boolean
         */
        newlySwitched(): boolean {
            return !!this.bb!.readInt8(this.bb_pos + 21);
        }

        /**
         * @returns number
         */
        level(): number {
            return this.bb!.readUint8(this.bb_pos + 22);
        }

        /**
         * @returns number
         */
        numMoves(): number {
            return this.bb!.readUint8(this.bb_pos + 23);
        }

        /**
         * @returns boolean
         */
        isPublic(): boolean {
            return !!this.bb!.readInt8(this.bb_pos + 24);
        }

        /**
         * @returns number
         */
        lastMove(): number {
            return this.bb!.readUint16(this.bb_pos + 26);
        }

        /**
         * @returns number
         */
        moveId0(): number {
            return this.bb!.readUint16(this.bb_pos + 28);
        }

        /**
         * @returns number
         */
        moveId1(): number {
            return this.bb!.readUint16(this.bb_pos + 30);
        }

        /**
         * @returns number
         */
        moveId2(): number {
            return this.bb!.readUint16(this.bb_pos + 32);
        }

        /**
         * @returns number
         */
        moveId3(): number {
            return this.bb!.readUint16(this.bb_pos + 34);
        }

        /**
         * @returns number
         */
        movePp0(): number {
            return this.bb!.readUint8(this.bb_pos + 36);
        }

        /**
         * @returns number
         */
        movePp1(): number {
            return this.bb!.readUint8(this.bb_pos + 37);
        }

        /**
         * @returns number
         */
        movePp2(): number {
            return this.bb!.readUint8(this.bb_pos + 38);
        }

        /**
         * @returns number
         */
        movePp3(): number {
            return this.bb!.readUint8(this.bb_pos + 39);
        }

        /**
         * @param flatbuffers.Builder builder
         * @param number species
         * @param number item
         * @param number item_effect
         * @param number ability
         * @param number gender
         * @param boolean active
         * @param boolean fainted
         * @param number hp
         * @param number maxhp
         * @param number hp_ratio
         * @param number status
         * @param boolean has_status
         * @param number toxic_turns
         * @param number sleep_turns
         * @param boolean trapped
         * @param boolean newly_switched
         * @param number level
         * @param number num_moves
         * @param boolean is_public
         * @param number last_move
         * @param number move_id0
         * @param number move_id1
         * @param number move_id2
         * @param number move_id3
         * @param number move_pp0
         * @param number move_pp1
         * @param number move_pp2
         * @param number move_pp3
         * @returns flatbuffers.Offset
         */
        static createPokemon(
            builder: flatbuffers.Builder,
            species: number,
            item: number,
            item_effect: number,
            ability: number,
            gender: number,
            active: boolean,
            fainted: boolean,
            hp: number,
            maxhp: number,
            hp_ratio: number,
            status: number,
            has_status: boolean,
            toxic_turns: number,
            sleep_turns: number,
            trapped: boolean,
            newly_switched: boolean,
            level: number,
            num_moves: number,
            is_public: boolean,
            last_move: number,
            move_id0: number,
            move_id1: number,
            move_id2: number,
            move_id3: number,
            move_pp0: number,
            move_pp1: number,
            move_pp2: number,
            move_pp3: number,
        ): flatbuffers.Offset {
            builder.prep(2, 40);
            builder.writeInt8(move_pp3);
            builder.writeInt8(move_pp2);
            builder.writeInt8(move_pp1);
            builder.writeInt8(move_pp0);
            builder.writeInt16(move_id3);
            builder.writeInt16(move_id2);
            builder.writeInt16(move_id1);
            builder.writeInt16(move_id0);
            builder.writeInt16(last_move);
            builder.pad(1);
            builder.writeInt8(+is_public);
            builder.writeInt8(num_moves);
            builder.writeInt8(level);
            builder.writeInt8(+newly_switched);
            builder.writeInt8(+trapped);
            builder.writeInt8(sleep_turns);
            builder.writeInt8(toxic_turns);
            builder.writeInt8(+has_status);
            builder.writeInt8(status);
            builder.writeInt16(hp_ratio);
            builder.pad(1);
            builder.writeInt8(maxhp);
            builder.writeInt8(hp);
            builder.writeInt8(+fainted);
            builder.writeInt8(+active);
            builder.writeInt8(gender);
            builder.writeInt16(ability);
            builder.pad(1);
            builder.writeInt8(item_effect);
            builder.writeInt16(item);
            builder.writeInt16(species);
            return builder.offset();
        }
    }
}
/**
 * @constructor
 */
export namespace features {
    export class PokemonList {
        bb: flatbuffers.ByteBuffer | null = null;

        bb_pos: number = 0;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns PokemonList
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): PokemonList {
            this.bb_pos = i;
            this.bb = bb;
            return this;
        }

        /**
         * @param flatbuffers.ByteBuffer bb
         * @param PokemonList= obj
         * @returns PokemonList
         */
        static getRootAsPokemonList(
            bb: flatbuffers.ByteBuffer,
            obj?: PokemonList,
        ): PokemonList {
            return (obj || new PokemonList()).__init(
                bb.readInt32(bb.position()) + bb.position(),
                bb,
            );
        }

        /**
         * @param flatbuffers.ByteBuffer bb
         * @param PokemonList= obj
         * @returns PokemonList
         */
        static getSizePrefixedRootAsPokemonList(
            bb: flatbuffers.ByteBuffer,
            obj?: PokemonList,
        ): PokemonList {
            bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
            return (obj || new PokemonList()).__init(
                bb.readInt32(bb.position()) + bb.position(),
                bb,
            );
        }

        /**
         * @param number index
         * @param features.Pokemon= obj
         * @returns features.Pokemon
         */
        pokemon(
            index: number,
            obj?: features.Pokemon,
        ): features.Pokemon | null {
            var offset = this.bb!.__offset(this.bb_pos, 4);
            return offset
                ? (obj || new features.Pokemon()).__init(
                      this.bb!.__vector(this.bb_pos + offset) + index * 40,
                      this.bb!,
                  )
                : null;
        }

        /**
         * @returns number
         */
        pokemonLength(): number {
            var offset = this.bb!.__offset(this.bb_pos, 4);
            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
        }

        /**
         * @param flatbuffers.Builder builder
         */
        static startPokemonList(builder: flatbuffers.Builder) {
            builder.startObject(1);
        }

        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset pokemonOffset
         */
        static addPokemon(
            builder: flatbuffers.Builder,
            pokemonOffset: flatbuffers.Offset,
        ) {
            builder.addFieldOffset(0, pokemonOffset, 0);
        }

        /**
         * @param flatbuffers.Builder builder
         * @param number numElems
         */
        static startPokemonVector(
            builder: flatbuffers.Builder,
            numElems: number,
        ) {
            builder.startVector(40, numElems, 2);
        }

        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endPokemonList(
            builder: flatbuffers.Builder,
        ): flatbuffers.Offset {
            var offset = builder.endObject();
            return offset;
        }

        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset offset
         */
        static finishPokemonListBuffer(
            builder: flatbuffers.Builder,
            offset: flatbuffers.Offset,
        ) {
            builder.finish(offset);
        }

        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset offset
         */
        static finishSizePrefixedPokemonListBuffer(
            builder: flatbuffers.Builder,
            offset: flatbuffers.Offset,
        ) {
            builder.finish(offset, undefined, true);
        }

        static createPokemonList(
            builder: flatbuffers.Builder,
            pokemonOffset: flatbuffers.Offset,
        ): flatbuffers.Offset {
            PokemonList.startPokemonList(builder);
            PokemonList.addPokemon(builder, pokemonOffset);
            return PokemonList.endPokemonList(builder);
        }
    }
}
