// source: service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

goog.exportSymbol('proto.servicev2.Action', null, global);
goog.exportSymbol('proto.servicev2.ClientRequest', null, global);
goog.exportSymbol('proto.servicev2.ClientRequest.MessageTypeCase', null, global);
goog.exportSymbol('proto.servicev2.EnvironmentResponse', null, global);
goog.exportSymbol('proto.servicev2.EnvironmentState', null, global);
goog.exportSymbol('proto.servicev2.EnvironmentTrajectory', null, global);
goog.exportSymbol('proto.servicev2.ErrorResponse', null, global);
goog.exportSymbol('proto.servicev2.ResetRequest', null, global);
goog.exportSymbol('proto.servicev2.StepRequest', null, global);
goog.exportSymbol('proto.servicev2.WorkerRequest', null, global);
goog.exportSymbol('proto.servicev2.WorkerRequest.RequestCase', null, global);
goog.exportSymbol('proto.servicev2.WorkerResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.servicev2.ClientRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.servicev2.ClientRequest.oneofGroups_);
};
goog.inherits(proto.servicev2.ClientRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.servicev2.ClientRequest.displayName = 'proto.servicev2.ClientRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.servicev2.Action = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.servicev2.Action, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.servicev2.Action.displayName = 'proto.servicev2.Action';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.servicev2.StepRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.servicev2.StepRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.servicev2.StepRequest.displayName = 'proto.servicev2.StepRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.servicev2.ResetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.servicev2.ResetRequest.repeatedFields_, null);
};
goog.inherits(proto.servicev2.ResetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.servicev2.ResetRequest.displayName = 'proto.servicev2.ResetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.servicev2.EnvironmentState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.servicev2.EnvironmentState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.servicev2.EnvironmentState.displayName = 'proto.servicev2.EnvironmentState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.servicev2.EnvironmentTrajectory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.servicev2.EnvironmentTrajectory.repeatedFields_, null);
};
goog.inherits(proto.servicev2.EnvironmentTrajectory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.servicev2.EnvironmentTrajectory.displayName = 'proto.servicev2.EnvironmentTrajectory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.servicev2.EnvironmentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.servicev2.EnvironmentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.servicev2.EnvironmentResponse.displayName = 'proto.servicev2.EnvironmentResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.servicev2.ErrorResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.servicev2.ErrorResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.servicev2.ErrorResponse.displayName = 'proto.servicev2.ErrorResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.servicev2.WorkerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.servicev2.WorkerRequest.oneofGroups_);
};
goog.inherits(proto.servicev2.WorkerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.servicev2.WorkerRequest.displayName = 'proto.servicev2.WorkerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.servicev2.WorkerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.servicev2.WorkerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.servicev2.WorkerResponse.displayName = 'proto.servicev2.WorkerResponse';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.servicev2.ClientRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.servicev2.ClientRequest.MessageTypeCase = {
  MESSAGE_TYPE_NOT_SET: 0,
  STEP: 1,
  RESET: 2
};

/**
 * @return {proto.servicev2.ClientRequest.MessageTypeCase}
 */
proto.servicev2.ClientRequest.prototype.getMessageTypeCase = function() {
  return /** @type {proto.servicev2.ClientRequest.MessageTypeCase} */(jspb.Message.computeOneofCase(this, proto.servicev2.ClientRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.servicev2.ClientRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.servicev2.ClientRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.servicev2.ClientRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.servicev2.ClientRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    step: (f = msg.getStep()) && proto.servicev2.StepRequest.toObject(includeInstance, f),
    reset: (f = msg.getReset()) && proto.servicev2.ResetRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.servicev2.ClientRequest}
 */
proto.servicev2.ClientRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.servicev2.ClientRequest;
  return proto.servicev2.ClientRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.servicev2.ClientRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.servicev2.ClientRequest}
 */
proto.servicev2.ClientRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.servicev2.StepRequest;
      reader.readMessage(value,proto.servicev2.StepRequest.deserializeBinaryFromReader);
      msg.setStep(value);
      break;
    case 2:
      var value = new proto.servicev2.ResetRequest;
      reader.readMessage(value,proto.servicev2.ResetRequest.deserializeBinaryFromReader);
      msg.setReset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.servicev2.ClientRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.servicev2.ClientRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.servicev2.ClientRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.servicev2.ClientRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStep();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.servicev2.StepRequest.serializeBinaryToWriter
    );
  }
  f = message.getReset();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.servicev2.ResetRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional StepRequest step = 1;
 * @return {?proto.servicev2.StepRequest}
 */
proto.servicev2.ClientRequest.prototype.getStep = function() {
  return /** @type{?proto.servicev2.StepRequest} */ (
    jspb.Message.getWrapperField(this, proto.servicev2.StepRequest, 1));
};


/**
 * @param {?proto.servicev2.StepRequest|undefined} value
 * @return {!proto.servicev2.ClientRequest} returns this
*/
proto.servicev2.ClientRequest.prototype.setStep = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.servicev2.ClientRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.servicev2.ClientRequest} returns this
 */
proto.servicev2.ClientRequest.prototype.clearStep = function() {
  return this.setStep(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.servicev2.ClientRequest.prototype.hasStep = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ResetRequest reset = 2;
 * @return {?proto.servicev2.ResetRequest}
 */
proto.servicev2.ClientRequest.prototype.getReset = function() {
  return /** @type{?proto.servicev2.ResetRequest} */ (
    jspb.Message.getWrapperField(this, proto.servicev2.ResetRequest, 2));
};


/**
 * @param {?proto.servicev2.ResetRequest|undefined} value
 * @return {!proto.servicev2.ClientRequest} returns this
*/
proto.servicev2.ClientRequest.prototype.setReset = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.servicev2.ClientRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.servicev2.ClientRequest} returns this
 */
proto.servicev2.ClientRequest.prototype.clearReset = function() {
  return this.setReset(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.servicev2.ClientRequest.prototype.hasReset = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.servicev2.Action.prototype.toObject = function(opt_includeInstance) {
  return proto.servicev2.Action.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.servicev2.Action} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.servicev2.Action.toObject = function(includeInstance, msg) {
  var f, obj = {
    actionType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    moveSlot: jspb.Message.getFieldWithDefault(msg, 2, 0),
    switchSlot: jspb.Message.getFieldWithDefault(msg, 3, 0),
    wildcardSlot: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.servicev2.Action}
 */
proto.servicev2.Action.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.servicev2.Action;
  return proto.servicev2.Action.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.servicev2.Action} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.servicev2.Action}
 */
proto.servicev2.Action.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setActionType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMoveSlot(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSwitchSlot(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWildcardSlot(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.servicev2.Action.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.servicev2.Action.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.servicev2.Action} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.servicev2.Action.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActionType();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMoveSlot();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getSwitchSlot();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getWildcardSlot();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int32 action_type = 1;
 * @return {number}
 */
proto.servicev2.Action.prototype.getActionType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.servicev2.Action} returns this
 */
proto.servicev2.Action.prototype.setActionType = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 move_slot = 2;
 * @return {number}
 */
proto.servicev2.Action.prototype.getMoveSlot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.servicev2.Action} returns this
 */
proto.servicev2.Action.prototype.setMoveSlot = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 switch_slot = 3;
 * @return {number}
 */
proto.servicev2.Action.prototype.getSwitchSlot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.servicev2.Action} returns this
 */
proto.servicev2.Action.prototype.setSwitchSlot = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 wildcard_slot = 4;
 * @return {number}
 */
proto.servicev2.Action.prototype.getWildcardSlot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.servicev2.Action} returns this
 */
proto.servicev2.Action.prototype.setWildcardSlot = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.servicev2.StepRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.servicev2.StepRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.servicev2.StepRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.servicev2.StepRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    username: jspb.Message.getFieldWithDefault(msg, 1, ""),
    action: (f = msg.getAction()) && proto.servicev2.Action.toObject(includeInstance, f),
    rqid: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.servicev2.StepRequest}
 */
proto.servicev2.StepRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.servicev2.StepRequest;
  return proto.servicev2.StepRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.servicev2.StepRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.servicev2.StepRequest}
 */
proto.servicev2.StepRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 2:
      var value = new proto.servicev2.Action;
      reader.readMessage(value,proto.servicev2.Action.deserializeBinaryFromReader);
      msg.setAction(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRqid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.servicev2.StepRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.servicev2.StepRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.servicev2.StepRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.servicev2.StepRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAction();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.servicev2.Action.serializeBinaryToWriter
    );
  }
  f = message.getRqid();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional string username = 1;
 * @return {string}
 */
proto.servicev2.StepRequest.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.servicev2.StepRequest} returns this
 */
proto.servicev2.StepRequest.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Action action = 2;
 * @return {?proto.servicev2.Action}
 */
proto.servicev2.StepRequest.prototype.getAction = function() {
  return /** @type{?proto.servicev2.Action} */ (
    jspb.Message.getWrapperField(this, proto.servicev2.Action, 2));
};


/**
 * @param {?proto.servicev2.Action|undefined} value
 * @return {!proto.servicev2.StepRequest} returns this
*/
proto.servicev2.StepRequest.prototype.setAction = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.servicev2.StepRequest} returns this
 */
proto.servicev2.StepRequest.prototype.clearAction = function() {
  return this.setAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.servicev2.StepRequest.prototype.hasAction = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 rqid = 3;
 * @return {number}
 */
proto.servicev2.StepRequest.prototype.getRqid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.servicev2.StepRequest} returns this
 */
proto.servicev2.StepRequest.prototype.setRqid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.servicev2.ResetRequest.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.servicev2.ResetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.servicev2.ResetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.servicev2.ResetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.servicev2.ResetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    username: jspb.Message.getFieldWithDefault(msg, 1, ""),
    speciesIndicesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    packedSetIndicesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    smogonFormat: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.servicev2.ResetRequest}
 */
proto.servicev2.ResetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.servicev2.ResetRequest;
  return proto.servicev2.ResetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.servicev2.ResetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.servicev2.ResetRequest}
 */
proto.servicev2.ResetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSpeciesIndices(values[i]);
      }
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPackedSetIndices(values[i]);
      }
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSmogonFormat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.servicev2.ResetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.servicev2.ResetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.servicev2.ResetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.servicev2.ResetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSpeciesIndicesList();
  if (f.length > 0) {
    writer.writePackedInt32(
      2,
      f
    );
  }
  f = message.getPackedSetIndicesList();
  if (f.length > 0) {
    writer.writePackedInt32(
      3,
      f
    );
  }
  f = message.getSmogonFormat();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string username = 1;
 * @return {string}
 */
proto.servicev2.ResetRequest.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.servicev2.ResetRequest} returns this
 */
proto.servicev2.ResetRequest.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated int32 species_indices = 2;
 * @return {!Array<number>}
 */
proto.servicev2.ResetRequest.prototype.getSpeciesIndicesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.servicev2.ResetRequest} returns this
 */
proto.servicev2.ResetRequest.prototype.setSpeciesIndicesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.servicev2.ResetRequest} returns this
 */
proto.servicev2.ResetRequest.prototype.addSpeciesIndices = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.servicev2.ResetRequest} returns this
 */
proto.servicev2.ResetRequest.prototype.clearSpeciesIndicesList = function() {
  return this.setSpeciesIndicesList([]);
};


/**
 * repeated int32 packed_set_indices = 3;
 * @return {!Array<number>}
 */
proto.servicev2.ResetRequest.prototype.getPackedSetIndicesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.servicev2.ResetRequest} returns this
 */
proto.servicev2.ResetRequest.prototype.setPackedSetIndicesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.servicev2.ResetRequest} returns this
 */
proto.servicev2.ResetRequest.prototype.addPackedSetIndices = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.servicev2.ResetRequest} returns this
 */
proto.servicev2.ResetRequest.prototype.clearPackedSetIndicesList = function() {
  return this.setPackedSetIndicesList([]);
};


/**
 * optional string smogon_format = 4;
 * @return {string}
 */
proto.servicev2.ResetRequest.prototype.getSmogonFormat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.servicev2.ResetRequest} returns this
 */
proto.servicev2.ResetRequest.prototype.setSmogonFormat = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.servicev2.EnvironmentState.prototype.toObject = function(opt_includeInstance) {
  return proto.servicev2.EnvironmentState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.servicev2.EnvironmentState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.servicev2.EnvironmentState.toObject = function(includeInstance, msg) {
  var f, obj = {
    info: msg.getInfo_asB64(),
    actionMask: msg.getActionMask_asB64(),
    historyEntityNodes: msg.getHistoryEntityNodes_asB64(),
    historyEntityEdges: msg.getHistoryEntityEdges_asB64(),
    historyField: msg.getHistoryField_asB64(),
    historyLength: jspb.Message.getFieldWithDefault(msg, 6, 0),
    moveset: msg.getMoveset_asB64(),
    publicTeam: msg.getPublicTeam_asB64(),
    privateTeam: msg.getPrivateTeam_asB64(),
    field: msg.getField_asB64(),
    rqid: jspb.Message.getFieldWithDefault(msg, 11, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.servicev2.EnvironmentState}
 */
proto.servicev2.EnvironmentState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.servicev2.EnvironmentState;
  return proto.servicev2.EnvironmentState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.servicev2.EnvironmentState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.servicev2.EnvironmentState}
 */
proto.servicev2.EnvironmentState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInfo(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setActionMask(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHistoryEntityNodes(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHistoryEntityEdges(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHistoryField(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHistoryLength(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMoveset(value);
      break;
    case 8:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPublicTeam(value);
      break;
    case 9:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPrivateTeam(value);
      break;
    case 10:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setField(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRqid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.servicev2.EnvironmentState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.servicev2.EnvironmentState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.servicev2.EnvironmentState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.servicev2.EnvironmentState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfo_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getActionMask_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getHistoryEntityNodes_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getHistoryEntityEdges_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getHistoryField_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getHistoryLength();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getMoveset_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      7,
      f
    );
  }
  f = message.getPublicTeam_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      8,
      f
    );
  }
  f = message.getPrivateTeam_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      9,
      f
    );
  }
  f = message.getField_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      10,
      f
    );
  }
  f = message.getRqid();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
};


/**
 * optional bytes info = 1;
 * @return {!(string|Uint8Array)}
 */
proto.servicev2.EnvironmentState.prototype.getInfo = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes info = 1;
 * This is a type-conversion wrapper around `getInfo()`
 * @return {string}
 */
proto.servicev2.EnvironmentState.prototype.getInfo_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInfo()));
};


/**
 * optional bytes info = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInfo()`
 * @return {!Uint8Array}
 */
proto.servicev2.EnvironmentState.prototype.getInfo_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInfo()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.servicev2.EnvironmentState} returns this
 */
proto.servicev2.EnvironmentState.prototype.setInfo = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes action_mask = 2;
 * @return {!(string|Uint8Array)}
 */
proto.servicev2.EnvironmentState.prototype.getActionMask = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes action_mask = 2;
 * This is a type-conversion wrapper around `getActionMask()`
 * @return {string}
 */
proto.servicev2.EnvironmentState.prototype.getActionMask_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getActionMask()));
};


/**
 * optional bytes action_mask = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getActionMask()`
 * @return {!Uint8Array}
 */
proto.servicev2.EnvironmentState.prototype.getActionMask_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getActionMask()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.servicev2.EnvironmentState} returns this
 */
proto.servicev2.EnvironmentState.prototype.setActionMask = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes history_entity_nodes = 3;
 * @return {!(string|Uint8Array)}
 */
proto.servicev2.EnvironmentState.prototype.getHistoryEntityNodes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes history_entity_nodes = 3;
 * This is a type-conversion wrapper around `getHistoryEntityNodes()`
 * @return {string}
 */
proto.servicev2.EnvironmentState.prototype.getHistoryEntityNodes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHistoryEntityNodes()));
};


/**
 * optional bytes history_entity_nodes = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHistoryEntityNodes()`
 * @return {!Uint8Array}
 */
proto.servicev2.EnvironmentState.prototype.getHistoryEntityNodes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHistoryEntityNodes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.servicev2.EnvironmentState} returns this
 */
proto.servicev2.EnvironmentState.prototype.setHistoryEntityNodes = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional bytes history_entity_edges = 4;
 * @return {!(string|Uint8Array)}
 */
proto.servicev2.EnvironmentState.prototype.getHistoryEntityEdges = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes history_entity_edges = 4;
 * This is a type-conversion wrapper around `getHistoryEntityEdges()`
 * @return {string}
 */
proto.servicev2.EnvironmentState.prototype.getHistoryEntityEdges_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHistoryEntityEdges()));
};


/**
 * optional bytes history_entity_edges = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHistoryEntityEdges()`
 * @return {!Uint8Array}
 */
proto.servicev2.EnvironmentState.prototype.getHistoryEntityEdges_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHistoryEntityEdges()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.servicev2.EnvironmentState} returns this
 */
proto.servicev2.EnvironmentState.prototype.setHistoryEntityEdges = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional bytes history_field = 5;
 * @return {!(string|Uint8Array)}
 */
proto.servicev2.EnvironmentState.prototype.getHistoryField = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes history_field = 5;
 * This is a type-conversion wrapper around `getHistoryField()`
 * @return {string}
 */
proto.servicev2.EnvironmentState.prototype.getHistoryField_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHistoryField()));
};


/**
 * optional bytes history_field = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHistoryField()`
 * @return {!Uint8Array}
 */
proto.servicev2.EnvironmentState.prototype.getHistoryField_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHistoryField()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.servicev2.EnvironmentState} returns this
 */
proto.servicev2.EnvironmentState.prototype.setHistoryField = function(value) {
  return jspb.Message.setProto3BytesField(this, 5, value);
};


/**
 * optional int32 history_length = 6;
 * @return {number}
 */
proto.servicev2.EnvironmentState.prototype.getHistoryLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.servicev2.EnvironmentState} returns this
 */
proto.servicev2.EnvironmentState.prototype.setHistoryLength = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional bytes moveset = 7;
 * @return {!(string|Uint8Array)}
 */
proto.servicev2.EnvironmentState.prototype.getMoveset = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * optional bytes moveset = 7;
 * This is a type-conversion wrapper around `getMoveset()`
 * @return {string}
 */
proto.servicev2.EnvironmentState.prototype.getMoveset_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMoveset()));
};


/**
 * optional bytes moveset = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMoveset()`
 * @return {!Uint8Array}
 */
proto.servicev2.EnvironmentState.prototype.getMoveset_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMoveset()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.servicev2.EnvironmentState} returns this
 */
proto.servicev2.EnvironmentState.prototype.setMoveset = function(value) {
  return jspb.Message.setProto3BytesField(this, 7, value);
};


/**
 * optional bytes public_team = 8;
 * @return {!(string|Uint8Array)}
 */
proto.servicev2.EnvironmentState.prototype.getPublicTeam = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * optional bytes public_team = 8;
 * This is a type-conversion wrapper around `getPublicTeam()`
 * @return {string}
 */
proto.servicev2.EnvironmentState.prototype.getPublicTeam_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPublicTeam()));
};


/**
 * optional bytes public_team = 8;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPublicTeam()`
 * @return {!Uint8Array}
 */
proto.servicev2.EnvironmentState.prototype.getPublicTeam_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPublicTeam()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.servicev2.EnvironmentState} returns this
 */
proto.servicev2.EnvironmentState.prototype.setPublicTeam = function(value) {
  return jspb.Message.setProto3BytesField(this, 8, value);
};


/**
 * optional bytes private_team = 9;
 * @return {!(string|Uint8Array)}
 */
proto.servicev2.EnvironmentState.prototype.getPrivateTeam = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * optional bytes private_team = 9;
 * This is a type-conversion wrapper around `getPrivateTeam()`
 * @return {string}
 */
proto.servicev2.EnvironmentState.prototype.getPrivateTeam_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPrivateTeam()));
};


/**
 * optional bytes private_team = 9;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPrivateTeam()`
 * @return {!Uint8Array}
 */
proto.servicev2.EnvironmentState.prototype.getPrivateTeam_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPrivateTeam()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.servicev2.EnvironmentState} returns this
 */
proto.servicev2.EnvironmentState.prototype.setPrivateTeam = function(value) {
  return jspb.Message.setProto3BytesField(this, 9, value);
};


/**
 * optional bytes field = 10;
 * @return {!(string|Uint8Array)}
 */
proto.servicev2.EnvironmentState.prototype.getField = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * optional bytes field = 10;
 * This is a type-conversion wrapper around `getField()`
 * @return {string}
 */
proto.servicev2.EnvironmentState.prototype.getField_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getField()));
};


/**
 * optional bytes field = 10;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getField()`
 * @return {!Uint8Array}
 */
proto.servicev2.EnvironmentState.prototype.getField_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getField()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.servicev2.EnvironmentState} returns this
 */
proto.servicev2.EnvironmentState.prototype.setField = function(value) {
  return jspb.Message.setProto3BytesField(this, 10, value);
};


/**
 * optional int32 rqid = 11;
 * @return {number}
 */
proto.servicev2.EnvironmentState.prototype.getRqid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.servicev2.EnvironmentState} returns this
 */
proto.servicev2.EnvironmentState.prototype.setRqid = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.servicev2.EnvironmentTrajectory.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.servicev2.EnvironmentTrajectory.prototype.toObject = function(opt_includeInstance) {
  return proto.servicev2.EnvironmentTrajectory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.servicev2.EnvironmentTrajectory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.servicev2.EnvironmentTrajectory.toObject = function(includeInstance, msg) {
  var f, obj = {
    statesList: jspb.Message.toObjectList(msg.getStatesList(),
    proto.servicev2.EnvironmentState.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.servicev2.EnvironmentTrajectory}
 */
proto.servicev2.EnvironmentTrajectory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.servicev2.EnvironmentTrajectory;
  return proto.servicev2.EnvironmentTrajectory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.servicev2.EnvironmentTrajectory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.servicev2.EnvironmentTrajectory}
 */
proto.servicev2.EnvironmentTrajectory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.servicev2.EnvironmentState;
      reader.readMessage(value,proto.servicev2.EnvironmentState.deserializeBinaryFromReader);
      msg.addStates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.servicev2.EnvironmentTrajectory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.servicev2.EnvironmentTrajectory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.servicev2.EnvironmentTrajectory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.servicev2.EnvironmentTrajectory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.servicev2.EnvironmentState.serializeBinaryToWriter
    );
  }
};


/**
 * repeated EnvironmentState states = 1;
 * @return {!Array<!proto.servicev2.EnvironmentState>}
 */
proto.servicev2.EnvironmentTrajectory.prototype.getStatesList = function() {
  return /** @type{!Array<!proto.servicev2.EnvironmentState>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.servicev2.EnvironmentState, 1));
};


/**
 * @param {!Array<!proto.servicev2.EnvironmentState>} value
 * @return {!proto.servicev2.EnvironmentTrajectory} returns this
*/
proto.servicev2.EnvironmentTrajectory.prototype.setStatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.servicev2.EnvironmentState=} opt_value
 * @param {number=} opt_index
 * @return {!proto.servicev2.EnvironmentState}
 */
proto.servicev2.EnvironmentTrajectory.prototype.addStates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.servicev2.EnvironmentState, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.servicev2.EnvironmentTrajectory} returns this
 */
proto.servicev2.EnvironmentTrajectory.prototype.clearStatesList = function() {
  return this.setStatesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.servicev2.EnvironmentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.servicev2.EnvironmentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.servicev2.EnvironmentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.servicev2.EnvironmentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    username: jspb.Message.getFieldWithDefault(msg, 1, ""),
    state: (f = msg.getState()) && proto.servicev2.EnvironmentState.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.servicev2.EnvironmentResponse}
 */
proto.servicev2.EnvironmentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.servicev2.EnvironmentResponse;
  return proto.servicev2.EnvironmentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.servicev2.EnvironmentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.servicev2.EnvironmentResponse}
 */
proto.servicev2.EnvironmentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 2:
      var value = new proto.servicev2.EnvironmentState;
      reader.readMessage(value,proto.servicev2.EnvironmentState.deserializeBinaryFromReader);
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.servicev2.EnvironmentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.servicev2.EnvironmentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.servicev2.EnvironmentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.servicev2.EnvironmentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getState();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.servicev2.EnvironmentState.serializeBinaryToWriter
    );
  }
};


/**
 * optional string username = 1;
 * @return {string}
 */
proto.servicev2.EnvironmentResponse.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.servicev2.EnvironmentResponse} returns this
 */
proto.servicev2.EnvironmentResponse.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional EnvironmentState state = 2;
 * @return {?proto.servicev2.EnvironmentState}
 */
proto.servicev2.EnvironmentResponse.prototype.getState = function() {
  return /** @type{?proto.servicev2.EnvironmentState} */ (
    jspb.Message.getWrapperField(this, proto.servicev2.EnvironmentState, 2));
};


/**
 * @param {?proto.servicev2.EnvironmentState|undefined} value
 * @return {!proto.servicev2.EnvironmentResponse} returns this
*/
proto.servicev2.EnvironmentResponse.prototype.setState = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.servicev2.EnvironmentResponse} returns this
 */
proto.servicev2.EnvironmentResponse.prototype.clearState = function() {
  return this.setState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.servicev2.EnvironmentResponse.prototype.hasState = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.servicev2.ErrorResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.servicev2.ErrorResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.servicev2.ErrorResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.servicev2.ErrorResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    trace: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.servicev2.ErrorResponse}
 */
proto.servicev2.ErrorResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.servicev2.ErrorResponse;
  return proto.servicev2.ErrorResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.servicev2.ErrorResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.servicev2.ErrorResponse}
 */
proto.servicev2.ErrorResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTrace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.servicev2.ErrorResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.servicev2.ErrorResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.servicev2.ErrorResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.servicev2.ErrorResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTrace();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string trace = 1;
 * @return {string}
 */
proto.servicev2.ErrorResponse.prototype.getTrace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.servicev2.ErrorResponse} returns this
 */
proto.servicev2.ErrorResponse.prototype.setTrace = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.servicev2.WorkerRequest.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.servicev2.WorkerRequest.RequestCase = {
  REQUEST_NOT_SET: 0,
  STEP_REQUEST: 2,
  RESET_REQUEST: 3
};

/**
 * @return {proto.servicev2.WorkerRequest.RequestCase}
 */
proto.servicev2.WorkerRequest.prototype.getRequestCase = function() {
  return /** @type {proto.servicev2.WorkerRequest.RequestCase} */(jspb.Message.computeOneofCase(this, proto.servicev2.WorkerRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.servicev2.WorkerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.servicev2.WorkerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.servicev2.WorkerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.servicev2.WorkerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    taskId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    stepRequest: (f = msg.getStepRequest()) && proto.servicev2.StepRequest.toObject(includeInstance, f),
    resetRequest: (f = msg.getResetRequest()) && proto.servicev2.ResetRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.servicev2.WorkerRequest}
 */
proto.servicev2.WorkerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.servicev2.WorkerRequest;
  return proto.servicev2.WorkerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.servicev2.WorkerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.servicev2.WorkerRequest}
 */
proto.servicev2.WorkerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTaskId(value);
      break;
    case 2:
      var value = new proto.servicev2.StepRequest;
      reader.readMessage(value,proto.servicev2.StepRequest.deserializeBinaryFromReader);
      msg.setStepRequest(value);
      break;
    case 3:
      var value = new proto.servicev2.ResetRequest;
      reader.readMessage(value,proto.servicev2.ResetRequest.deserializeBinaryFromReader);
      msg.setResetRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.servicev2.WorkerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.servicev2.WorkerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.servicev2.WorkerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.servicev2.WorkerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTaskId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getStepRequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.servicev2.StepRequest.serializeBinaryToWriter
    );
  }
  f = message.getResetRequest();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.servicev2.ResetRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 task_id = 1;
 * @return {number}
 */
proto.servicev2.WorkerRequest.prototype.getTaskId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.servicev2.WorkerRequest} returns this
 */
proto.servicev2.WorkerRequest.prototype.setTaskId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional StepRequest step_request = 2;
 * @return {?proto.servicev2.StepRequest}
 */
proto.servicev2.WorkerRequest.prototype.getStepRequest = function() {
  return /** @type{?proto.servicev2.StepRequest} */ (
    jspb.Message.getWrapperField(this, proto.servicev2.StepRequest, 2));
};


/**
 * @param {?proto.servicev2.StepRequest|undefined} value
 * @return {!proto.servicev2.WorkerRequest} returns this
*/
proto.servicev2.WorkerRequest.prototype.setStepRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.servicev2.WorkerRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.servicev2.WorkerRequest} returns this
 */
proto.servicev2.WorkerRequest.prototype.clearStepRequest = function() {
  return this.setStepRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.servicev2.WorkerRequest.prototype.hasStepRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ResetRequest reset_request = 3;
 * @return {?proto.servicev2.ResetRequest}
 */
proto.servicev2.WorkerRequest.prototype.getResetRequest = function() {
  return /** @type{?proto.servicev2.ResetRequest} */ (
    jspb.Message.getWrapperField(this, proto.servicev2.ResetRequest, 3));
};


/**
 * @param {?proto.servicev2.ResetRequest|undefined} value
 * @return {!proto.servicev2.WorkerRequest} returns this
*/
proto.servicev2.WorkerRequest.prototype.setResetRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.servicev2.WorkerRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.servicev2.WorkerRequest} returns this
 */
proto.servicev2.WorkerRequest.prototype.clearResetRequest = function() {
  return this.setResetRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.servicev2.WorkerRequest.prototype.hasResetRequest = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.servicev2.WorkerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.servicev2.WorkerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.servicev2.WorkerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.servicev2.WorkerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    taskId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    environmentResponse: (f = msg.getEnvironmentResponse()) && proto.servicev2.EnvironmentResponse.toObject(includeInstance, f),
    errorResponse: (f = msg.getErrorResponse()) && proto.servicev2.ErrorResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.servicev2.WorkerResponse}
 */
proto.servicev2.WorkerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.servicev2.WorkerResponse;
  return proto.servicev2.WorkerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.servicev2.WorkerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.servicev2.WorkerResponse}
 */
proto.servicev2.WorkerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTaskId(value);
      break;
    case 2:
      var value = new proto.servicev2.EnvironmentResponse;
      reader.readMessage(value,proto.servicev2.EnvironmentResponse.deserializeBinaryFromReader);
      msg.setEnvironmentResponse(value);
      break;
    case 3:
      var value = new proto.servicev2.ErrorResponse;
      reader.readMessage(value,proto.servicev2.ErrorResponse.deserializeBinaryFromReader);
      msg.setErrorResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.servicev2.WorkerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.servicev2.WorkerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.servicev2.WorkerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.servicev2.WorkerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTaskId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getEnvironmentResponse();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.servicev2.EnvironmentResponse.serializeBinaryToWriter
    );
  }
  f = message.getErrorResponse();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.servicev2.ErrorResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 task_id = 1;
 * @return {number}
 */
proto.servicev2.WorkerResponse.prototype.getTaskId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.servicev2.WorkerResponse} returns this
 */
proto.servicev2.WorkerResponse.prototype.setTaskId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional EnvironmentResponse environment_response = 2;
 * @return {?proto.servicev2.EnvironmentResponse}
 */
proto.servicev2.WorkerResponse.prototype.getEnvironmentResponse = function() {
  return /** @type{?proto.servicev2.EnvironmentResponse} */ (
    jspb.Message.getWrapperField(this, proto.servicev2.EnvironmentResponse, 2));
};


/**
 * @param {?proto.servicev2.EnvironmentResponse|undefined} value
 * @return {!proto.servicev2.WorkerResponse} returns this
*/
proto.servicev2.WorkerResponse.prototype.setEnvironmentResponse = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.servicev2.WorkerResponse} returns this
 */
proto.servicev2.WorkerResponse.prototype.clearEnvironmentResponse = function() {
  return this.setEnvironmentResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.servicev2.WorkerResponse.prototype.hasEnvironmentResponse = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ErrorResponse error_response = 3;
 * @return {?proto.servicev2.ErrorResponse}
 */
proto.servicev2.WorkerResponse.prototype.getErrorResponse = function() {
  return /** @type{?proto.servicev2.ErrorResponse} */ (
    jspb.Message.getWrapperField(this, proto.servicev2.ErrorResponse, 3));
};


/**
 * @param {?proto.servicev2.ErrorResponse|undefined} value
 * @return {!proto.servicev2.WorkerResponse} returns this
*/
proto.servicev2.WorkerResponse.prototype.setErrorResponse = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.servicev2.WorkerResponse} returns this
 */
proto.servicev2.WorkerResponse.prototype.clearErrorResponse = function() {
  return this.setErrorResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.servicev2.WorkerResponse.prototype.hasErrorResponse = function() {
  return jspb.Message.getField(this, 3) != null;
};


goog.object.extend(exports, proto.servicev2);
