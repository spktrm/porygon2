syntax = "proto3";

enum FeatureEntity {
    ENTITY_SPECIES = 0;
    ENTITY_ITEM = 1;
    ENTITY_ITEM_EFFECT = 2;
    ENTITY_ABILITY = 3;
    ENTITY_GENDER = 4;
    ENTITY_ACTIVE = 5;
    ENTITY_FAINTED = 6;
    ENTITY_HP = 7;
    ENTITY_MAXHP = 8;
    ENTITY_HP_RATIO = 9;
    ENTITY_STATUS = 10;
    ENTITY_TOXIC_TURNS = 11;
    ENTITY_SLEEP_TURNS = 12;
    ENTITY_BEING_CALLED_BACK = 13;
    ENTITY_TRAPPED = 14;
    ENTITY_NEWLY_SWITCHED = 15;
    ENTITY_LEVEL = 16;
    ENTITY_MOVEID0 = 17;
    ENTITY_MOVEID1 = 18;
    ENTITY_MOVEID2 = 19;
    ENTITY_MOVEID3 = 20;
    ENTITY_MOVEPP0 = 21;
    ENTITY_MOVEPP1 = 22;
    ENTITY_MOVEPP2 = 23;
    ENTITY_MOVEPP3 = 24;
    ENTITY_HAS_STATUS = 25;
    ENTITY_BOOST_ATK_VALUE = 26;
    ENTITY_BOOST_DEF_VALUE = 27;
    ENTITY_BOOST_SPA_VALUE = 28;
    ENTITY_BOOST_SPD_VALUE = 29;
    ENTITY_BOOST_SPE_VALUE = 30;
    ENTITY_BOOST_ACCURACY_VALUE = 31;
    ENTITY_BOOST_EVASION_VALUE = 32;
    ENTITY_VOLATILES0 = 33; // Stored as a 160 bit binary
    ENTITY_VOLATILES1 = 34; // Stored as a 160 bit binary
    ENTITY_VOLATILES2 = 35; // Stored as a 160 bit binary
    ENTITY_VOLATILES3 = 36; // Stored as a 160 bit binary
    ENTITY_VOLATILES4 = 37; // Stored as a 160 bit binary
    ENTITY_VOLATILES5 = 38; // Stored as a 160 bit binary
    ENTITY_VOLATILES6 = 39; // Stored as a 160 bit binary
    ENTITY_VOLATILES7 = 40; // Stored as a 160 bit binary
    ENTITY_VOLATILES8 = 41; // Stored as a 160 bit binary
    ENTITY_SIDE = 42;
    ENTITY_TYPECHANGE0 = 43;
    ENTITY_TYPECHANGE1 = 44;
}


enum MovesetActionType {
    MOVESET_ACTION_TYPE_MOVE = 0;
    MOVESET_ACTION_TYPE_SWITCH = 1;
}


enum FeatureMoveset {
    MOVESET_ACTION_ID = 0;
    MOVESET_PPUSED = 1;
    MOVESET_LEGAL = 2;
    MOVESET_SIDE = 3;    
    MOVESET_ACTION_TYPE = 4;    
    MOVESET_EST_DAMAGE = 5;    
    MOVESET_MOVE_ID = 6;
    MOVESET_SPECIES_ID = 7;
}

enum EdgeTypes {
    EDGE_TYPE_NONE = 0;
    MOVE_EDGE = 1;
    SWITCH_EDGE = 2;
    EFFECT_EDGE = 3;
    CANT_EDGE = 4;
    EDGE_TYPE_START = 5;
}

enum EdgeFromTypes {
    EDGE_FROM_NONE = 0;
    EDGE_FROM_ITEM = 1;
    EDGE_FROM_EFFECT = 2;
    EDGE_FROM_MOVE = 3;
    EDGE_FROM_ABILITY = 4;
    EDGE_FROM_SIDECONDITION = 5;
    EDGE_FROM_STATUS = 6;
    EDGE_FROM_WEATHER = 7;
    EDGE_FROM_TERRAIN = 8;
    EDGE_FROM_PSEUDOWEATHER = 9;
}

enum FeatureAbsoluteEdge {
    EDGE_TURN_ORDER_VALUE = 0;
    EDGE_TYPE_TOKEN = 1;
    EDGE_WEATHER_ID = 2;
    EDGE_WEATHER_MIN_DURATION = 3;
    EDGE_WEATHER_MAX_DURATION = 4;
    EDGE_TERRAIN_ID = 5;
    EDGE_TERRAIN_MIN_DURATION = 6;
    EDGE_TERRAIN_MAX_DURATION = 7;
    EDGE_PSEUDOWEATHER_ID = 8;
    EDGE_PSEUDOWEATHER_MIN_DURATION = 9;
    EDGE_PSEUDOWEATHER_MAX_DURATION = 10;
    EDGE_REQUEST_COUNT = 11;
    EDGE_VALID = 12;
    EDGE_INDEX = 13;
    EDGE_TURN_VALUE = 14;
}

// Indices of an Int8Array
enum FeatureRelativeEdge {
    EDGE_MAJOR_ARG = 0; // Major argument index
    EDGE_MINOR_ARG0 = 1; // bits 0-15 as 64-bit binary
    EDGE_MINOR_ARG1 = 2; // bits 16-31 as 64-bit binary
    EDGE_MINOR_ARG2 = 3; // bits 32-47 as 64-bit binary
    EDGE_MINOR_ARG3 = 4; // bits 48-63 as 64-bit binary
    EDGE_ACTION_TOKEN = 5; // Represents the action taken
    EDGE_ITEM_TOKEN = 6; // Represents the item used
    EDGE_ABILITY_TOKEN = 7; // Represents the ability used
    EDGE_FROM_TYPE_TOKEN = 8; // Represents the type of the move or action
    EDGE_FROM_SOURCE_TOKEN = 9; // Represents the source of the move or action
    EDGE_DAMAGE_RATIO = 10; // floor(31 * hpRatio)
    EDGE_HEAL_RATIO = 11; // floor(31 * hpRatio)
    EDGE_EFFECT_TOKEN = 12; // Represents the effect applied
    EDGE_BOOST_ATK_VALUE = 13; // Boost to Attack stat
    EDGE_BOOST_DEF_VALUE = 14; // Boost to Defense stat
    EDGE_BOOST_SPA_VALUE = 15; // Boost to Special Attack stat
    EDGE_BOOST_SPD_VALUE = 16; // Boost to Special Defense stat
    EDGE_BOOST_SPE_VALUE = 17; // Boost to Speed stat
    EDGE_BOOST_ACCURACY_VALUE = 18; // Boost to Accuracy stat
    EDGE_BOOST_EVASION_VALUE = 19; // Boost to Evasion stat
    EDGE_STATUS_TOKEN = 20; // Represents the status condition
    EDGE_SIDECONDITIONS0 = 21; // Stored as 32-bit binary
    EDGE_SIDECONDITIONS1 = 22; // Stored as 32-bit binary
    EDGE_TOXIC_SPIKES = 23; // Number of Toxic Spikes layers
    EDGE_SPIKES = 24; // Number of Spikes layers
}
