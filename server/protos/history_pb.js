// source: history.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var pokemon_pb = require('./pokemon_pb.js');
goog.object.extend(proto, pokemon_pb);
var enums_pb = require('./enums_pb.js');
goog.object.extend(proto, enums_pb);
goog.exportSymbol('proto.history.ActionTypeEnum', null, global);
goog.exportSymbol('proto.history.Boost', null, global);
goog.exportSymbol('proto.history.HistorySide', null, global);
goog.exportSymbol('proto.history.HistoryStep', null, global);
goog.exportSymbol('proto.history.SideCondition', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.history.Boost = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.history.Boost, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.history.Boost.displayName = 'proto.history.Boost';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.history.SideCondition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.history.SideCondition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.history.SideCondition.displayName = 'proto.history.SideCondition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.history.HistorySide = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.history.HistorySide.repeatedFields_, null);
};
goog.inherits(proto.history.HistorySide, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.history.HistorySide.displayName = 'proto.history.HistorySide';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.history.HistoryStep = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.history.HistoryStep.repeatedFields_, null);
};
goog.inherits(proto.history.HistoryStep, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.history.HistoryStep.displayName = 'proto.history.HistoryStep';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.history.Boost.prototype.toObject = function(opt_includeInstance) {
  return proto.history.Boost.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.history.Boost} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.history.Boost.toObject = function(includeInstance, msg) {
  var f, obj = {
    stat: jspb.Message.getFieldWithDefault(msg, 1, 0),
    value: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.history.Boost}
 */
proto.history.Boost.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.history.Boost;
  return proto.history.Boost.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.history.Boost} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.history.Boost}
 */
proto.history.Boost.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.enums.BoostsEnum} */ (reader.readEnum());
      msg.setStat(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.history.Boost.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.history.Boost.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.history.Boost} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.history.Boost.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStat();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional enums.BoostsEnum stat = 1;
 * @return {!proto.enums.BoostsEnum}
 */
proto.history.Boost.prototype.getStat = function() {
  return /** @type {!proto.enums.BoostsEnum} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.enums.BoostsEnum} value
 * @return {!proto.history.Boost} returns this
 */
proto.history.Boost.prototype.setStat = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int32 value = 2;
 * @return {number}
 */
proto.history.Boost.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.history.Boost} returns this
 */
proto.history.Boost.prototype.setValue = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.history.SideCondition.prototype.toObject = function(opt_includeInstance) {
  return proto.history.SideCondition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.history.SideCondition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.history.SideCondition.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    value: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.history.SideCondition}
 */
proto.history.SideCondition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.history.SideCondition;
  return proto.history.SideCondition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.history.SideCondition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.history.SideCondition}
 */
proto.history.SideCondition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.enums.SideconditionsEnum} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.history.SideCondition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.history.SideCondition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.history.SideCondition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.history.SideCondition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional enums.SideconditionsEnum type = 1;
 * @return {!proto.enums.SideconditionsEnum}
 */
proto.history.SideCondition.prototype.getType = function() {
  return /** @type {!proto.enums.SideconditionsEnum} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.enums.SideconditionsEnum} value
 * @return {!proto.history.SideCondition} returns this
 */
proto.history.SideCondition.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int32 value = 2;
 * @return {number}
 */
proto.history.SideCondition.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.history.SideCondition} returns this
 */
proto.history.SideCondition.prototype.setValue = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.history.HistorySide.repeatedFields_ = [2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.history.HistorySide.prototype.toObject = function(opt_includeInstance) {
  return proto.history.HistorySide.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.history.HistorySide} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.history.HistorySide.toObject = function(includeInstance, msg) {
  var f, obj = {
    active: (f = msg.getActive()) && pokemon_pb.Pokemon.toObject(includeInstance, f),
    boostsList: jspb.Message.toObjectList(msg.getBoostsList(),
    proto.history.Boost.toObject, includeInstance),
    sideconditionsList: jspb.Message.toObjectList(msg.getSideconditionsList(),
    proto.history.SideCondition.toObject, includeInstance),
    volatilestatusList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.history.HistorySide}
 */
proto.history.HistorySide.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.history.HistorySide;
  return proto.history.HistorySide.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.history.HistorySide} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.history.HistorySide}
 */
proto.history.HistorySide.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new pokemon_pb.Pokemon;
      reader.readMessage(value,pokemon_pb.Pokemon.deserializeBinaryFromReader);
      msg.setActive(value);
      break;
    case 2:
      var value = new proto.history.Boost;
      reader.readMessage(value,proto.history.Boost.deserializeBinaryFromReader);
      msg.addBoosts(value);
      break;
    case 3:
      var value = new proto.history.SideCondition;
      reader.readMessage(value,proto.history.SideCondition.deserializeBinaryFromReader);
      msg.addSideconditions(value);
      break;
    case 4:
      var values = /** @type {!Array<!proto.enums.VolatilestatusEnum>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addVolatilestatus(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.history.HistorySide.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.history.HistorySide.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.history.HistorySide} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.history.HistorySide.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActive();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      pokemon_pb.Pokemon.serializeBinaryToWriter
    );
  }
  f = message.getBoostsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.history.Boost.serializeBinaryToWriter
    );
  }
  f = message.getSideconditionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.history.SideCondition.serializeBinaryToWriter
    );
  }
  f = message.getVolatilestatusList();
  if (f.length > 0) {
    writer.writePackedEnum(
      4,
      f
    );
  }
};


/**
 * optional pokemon.Pokemon active = 1;
 * @return {?proto.pokemon.Pokemon}
 */
proto.history.HistorySide.prototype.getActive = function() {
  return /** @type{?proto.pokemon.Pokemon} */ (
    jspb.Message.getWrapperField(this, pokemon_pb.Pokemon, 1));
};


/**
 * @param {?proto.pokemon.Pokemon|undefined} value
 * @return {!proto.history.HistorySide} returns this
*/
proto.history.HistorySide.prototype.setActive = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.history.HistorySide} returns this
 */
proto.history.HistorySide.prototype.clearActive = function() {
  return this.setActive(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.history.HistorySide.prototype.hasActive = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Boost boosts = 2;
 * @return {!Array<!proto.history.Boost>}
 */
proto.history.HistorySide.prototype.getBoostsList = function() {
  return /** @type{!Array<!proto.history.Boost>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.history.Boost, 2));
};


/**
 * @param {!Array<!proto.history.Boost>} value
 * @return {!proto.history.HistorySide} returns this
*/
proto.history.HistorySide.prototype.setBoostsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.history.Boost=} opt_value
 * @param {number=} opt_index
 * @return {!proto.history.Boost}
 */
proto.history.HistorySide.prototype.addBoosts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.history.Boost, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.history.HistorySide} returns this
 */
proto.history.HistorySide.prototype.clearBoostsList = function() {
  return this.setBoostsList([]);
};


/**
 * repeated SideCondition sideConditions = 3;
 * @return {!Array<!proto.history.SideCondition>}
 */
proto.history.HistorySide.prototype.getSideconditionsList = function() {
  return /** @type{!Array<!proto.history.SideCondition>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.history.SideCondition, 3));
};


/**
 * @param {!Array<!proto.history.SideCondition>} value
 * @return {!proto.history.HistorySide} returns this
*/
proto.history.HistorySide.prototype.setSideconditionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.history.SideCondition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.history.SideCondition}
 */
proto.history.HistorySide.prototype.addSideconditions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.history.SideCondition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.history.HistorySide} returns this
 */
proto.history.HistorySide.prototype.clearSideconditionsList = function() {
  return this.setSideconditionsList([]);
};


/**
 * repeated enums.VolatilestatusEnum volatileStatus = 4;
 * @return {!Array<!proto.enums.VolatilestatusEnum>}
 */
proto.history.HistorySide.prototype.getVolatilestatusList = function() {
  return /** @type {!Array<!proto.enums.VolatilestatusEnum>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<!proto.enums.VolatilestatusEnum>} value
 * @return {!proto.history.HistorySide} returns this
 */
proto.history.HistorySide.prototype.setVolatilestatusList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!proto.enums.VolatilestatusEnum} value
 * @param {number=} opt_index
 * @return {!proto.history.HistorySide} returns this
 */
proto.history.HistorySide.prototype.addVolatilestatus = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.history.HistorySide} returns this
 */
proto.history.HistorySide.prototype.clearVolatilestatusList = function() {
  return this.setVolatilestatusList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.history.HistoryStep.repeatedFields_ = [4,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.history.HistoryStep.prototype.toObject = function(opt_includeInstance) {
  return proto.history.HistoryStep.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.history.HistoryStep} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.history.HistoryStep.toObject = function(includeInstance, msg) {
  var f, obj = {
    p1: (f = msg.getP1()) && proto.history.HistorySide.toObject(includeInstance, f),
    p2: (f = msg.getP2()) && proto.history.HistorySide.toObject(includeInstance, f),
    weather: jspb.Message.getFieldWithDefault(msg, 3, 0),
    pseudoweatherList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    action: jspb.Message.getFieldWithDefault(msg, 5, 0),
    move: jspb.Message.getFieldWithDefault(msg, 6, 0),
    hyphenargsList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.history.HistoryStep}
 */
proto.history.HistoryStep.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.history.HistoryStep;
  return proto.history.HistoryStep.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.history.HistoryStep} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.history.HistoryStep}
 */
proto.history.HistoryStep.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.history.HistorySide;
      reader.readMessage(value,proto.history.HistorySide.deserializeBinaryFromReader);
      msg.setP1(value);
      break;
    case 2:
      var value = new proto.history.HistorySide;
      reader.readMessage(value,proto.history.HistorySide.deserializeBinaryFromReader);
      msg.setP2(value);
      break;
    case 3:
      var value = /** @type {!proto.enums.WeathersEnum} */ (reader.readEnum());
      msg.setWeather(value);
      break;
    case 4:
      var values = /** @type {!Array<!proto.enums.PseudoweatherEnum>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPseudoweather(values[i]);
      }
      break;
    case 5:
      var value = /** @type {!proto.history.ActionTypeEnum} */ (reader.readEnum());
      msg.setAction(value);
      break;
    case 6:
      var value = /** @type {!proto.enums.MovesEnum} */ (reader.readEnum());
      msg.setMove(value);
      break;
    case 7:
      var values = /** @type {!Array<!proto.enums.HyphenargsEnum>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addHyphenargs(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.history.HistoryStep.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.history.HistoryStep.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.history.HistoryStep} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.history.HistoryStep.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getP1();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.history.HistorySide.serializeBinaryToWriter
    );
  }
  f = message.getP2();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.history.HistorySide.serializeBinaryToWriter
    );
  }
  f = message.getWeather();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getPseudoweatherList();
  if (f.length > 0) {
    writer.writePackedEnum(
      4,
      f
    );
  }
  f = message.getAction();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getMove();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getHyphenargsList();
  if (f.length > 0) {
    writer.writePackedEnum(
      7,
      f
    );
  }
};


/**
 * optional HistorySide p1 = 1;
 * @return {?proto.history.HistorySide}
 */
proto.history.HistoryStep.prototype.getP1 = function() {
  return /** @type{?proto.history.HistorySide} */ (
    jspb.Message.getWrapperField(this, proto.history.HistorySide, 1));
};


/**
 * @param {?proto.history.HistorySide|undefined} value
 * @return {!proto.history.HistoryStep} returns this
*/
proto.history.HistoryStep.prototype.setP1 = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.history.HistoryStep} returns this
 */
proto.history.HistoryStep.prototype.clearP1 = function() {
  return this.setP1(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.history.HistoryStep.prototype.hasP1 = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional HistorySide p2 = 2;
 * @return {?proto.history.HistorySide}
 */
proto.history.HistoryStep.prototype.getP2 = function() {
  return /** @type{?proto.history.HistorySide} */ (
    jspb.Message.getWrapperField(this, proto.history.HistorySide, 2));
};


/**
 * @param {?proto.history.HistorySide|undefined} value
 * @return {!proto.history.HistoryStep} returns this
*/
proto.history.HistoryStep.prototype.setP2 = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.history.HistoryStep} returns this
 */
proto.history.HistoryStep.prototype.clearP2 = function() {
  return this.setP2(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.history.HistoryStep.prototype.hasP2 = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional enums.WeathersEnum weather = 3;
 * @return {!proto.enums.WeathersEnum}
 */
proto.history.HistoryStep.prototype.getWeather = function() {
  return /** @type {!proto.enums.WeathersEnum} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.enums.WeathersEnum} value
 * @return {!proto.history.HistoryStep} returns this
 */
proto.history.HistoryStep.prototype.setWeather = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * repeated enums.PseudoweatherEnum pseudoweather = 4;
 * @return {!Array<!proto.enums.PseudoweatherEnum>}
 */
proto.history.HistoryStep.prototype.getPseudoweatherList = function() {
  return /** @type {!Array<!proto.enums.PseudoweatherEnum>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<!proto.enums.PseudoweatherEnum>} value
 * @return {!proto.history.HistoryStep} returns this
 */
proto.history.HistoryStep.prototype.setPseudoweatherList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!proto.enums.PseudoweatherEnum} value
 * @param {number=} opt_index
 * @return {!proto.history.HistoryStep} returns this
 */
proto.history.HistoryStep.prototype.addPseudoweather = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.history.HistoryStep} returns this
 */
proto.history.HistoryStep.prototype.clearPseudoweatherList = function() {
  return this.setPseudoweatherList([]);
};


/**
 * optional ActionTypeEnum action = 5;
 * @return {!proto.history.ActionTypeEnum}
 */
proto.history.HistoryStep.prototype.getAction = function() {
  return /** @type {!proto.history.ActionTypeEnum} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.history.ActionTypeEnum} value
 * @return {!proto.history.HistoryStep} returns this
 */
proto.history.HistoryStep.prototype.setAction = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional enums.MovesEnum move = 6;
 * @return {!proto.enums.MovesEnum}
 */
proto.history.HistoryStep.prototype.getMove = function() {
  return /** @type {!proto.enums.MovesEnum} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.enums.MovesEnum} value
 * @return {!proto.history.HistoryStep} returns this
 */
proto.history.HistoryStep.prototype.setMove = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * repeated enums.HyphenargsEnum hyphenArgs = 7;
 * @return {!Array<!proto.enums.HyphenargsEnum>}
 */
proto.history.HistoryStep.prototype.getHyphenargsList = function() {
  return /** @type {!Array<!proto.enums.HyphenargsEnum>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<!proto.enums.HyphenargsEnum>} value
 * @return {!proto.history.HistoryStep} returns this
 */
proto.history.HistoryStep.prototype.setHyphenargsList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {!proto.enums.HyphenargsEnum} value
 * @param {number=} opt_index
 * @return {!proto.history.HistoryStep} returns this
 */
proto.history.HistoryStep.prototype.addHyphenargs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.history.HistoryStep} returns this
 */
proto.history.HistoryStep.prototype.clearHyphenargsList = function() {
  return this.setHyphenargsList([]);
};


/**
 * @enum {number}
 */
proto.history.ActionTypeEnum = {
  MOVE: 0,
  SWITCH: 1
};

goog.object.extend(exports, proto.history);
